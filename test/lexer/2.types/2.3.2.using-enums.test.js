import { lex, getCode } from "../../util";

test("2.3.2.using-enums", async () => {
  const code = await getCode("./manual/2.types/2.3.2.using-enums.elias");
  expect(lex(code)).toEqual([
    { variant: "KeywordToken", value: "enum" },
    { variant: "IdentToken", value: "Color" },
    { variant: "IdentToken", value: "Red" },
    { variant: "DelimiterToken", value: "," },
    { variant: "IdentToken", value: "Green" },
    { variant: "DelimiterToken", value: "," },
    { variant: "IdentToken", value: "Blue" },
    { variant: "DelimiterToken", value: ";" },
    { variant: "IdentToken", value: "RGB" },
    { variant: "DelimiterToken", value: "(" },
    { variant: "IdentToken", value: "r" },
    { variant: "DelimiterToken", value: ":" },
    { variant: "IdentToken", value: "Int" },
    { variant: "DelimiterToken", value: "," },
    { variant: "IdentToken", value: "g" },
    { variant: "DelimiterToken", value: ":" },
    { variant: "IdentToken", value: "Int" },
    { variant: "DelimiterToken", value: "," },
    { variant: "IdentToken", value: "b" },
    { variant: "DelimiterToken", value: ":" },
    { variant: "IdentToken", value: "Int" },
    { variant: "DelimiterToken", value: ")" },
    { variant: "DelimiterToken", value: ";" },
    { variant: "KeywordToken", value: "end" },
    { variant: "KeywordToken", value: "class" },
    { variant: "IdentToken", value: "Main" },
    { variant: "KeywordToken", value: "static" },
    { variant: "KeywordToken", value: "public" },
    { variant: "KeywordToken", value: "def" },
    { variant: "IdentToken", value: "main" },
    { variant: "DelimiterToken", value: "(" },
    { variant: "DelimiterToken", value: ")" },
    { variant: "DelimiterToken", value: ":" },
    { variant: "IdentToken", value: "Void" },
    { variant: "KeywordToken", value: "let" },
    { variant: "IdentToken", value: "c" },
    { variant: "DelimiterToken", value: "=" },
    { variant: "IdentToken", value: "getColor" },
    { variant: "DelimiterToken", value: "(" },
    { variant: "DelimiterToken", value: ")" },
    { variant: "DelimiterToken", value: ";" },
    { variant: "KeywordToken", value: "switch" },
    { variant: "IdentToken", value: "c" },
    { variant: "KeywordToken", value: "case" },
    { variant: "IdentToken", value: "Color" },
    { variant: "DelimiterToken", value: "." },
    { variant: "IdentToken", value: "Red" },
    { variant: "DelimiterToken", value: ":" },
    { variant: "KeywordToken", value: "print" },
    { variant: "DelimiterToken", value: "(" },
    { variant: "StringToken", value: "Red" },
    { variant: "DelimiterToken", value: ")" },
    { variant: "DelimiterToken", value: ";" },
    { variant: "KeywordToken", value: "case" },
    { variant: "IdentToken", value: "Color" },
    { variant: "DelimiterToken", value: "." },
    { variant: "IdentToken", value: "Green" },
    { variant: "DelimiterToken", value: ":" },
    { variant: "KeywordToken", value: "print" },
    { variant: "DelimiterToken", value: "(" },
    { variant: "StringToken", value: "Green" },
    { variant: "DelimiterToken", value: ")" },
    { variant: "DelimiterToken", value: ";" },
    { variant: "KeywordToken", value: "case" },
    { variant: "IdentToken", value: "Color" },
    { variant: "DelimiterToken", value: "." },
    { variant: "IdentToken", value: "Blue" },
    { variant: "DelimiterToken", value: ":" },
    { variant: "KeywordToken", value: "print" },
    { variant: "DelimiterToken", value: "(" },
    { variant: "StringToken", value: "Blue" },
    { variant: "DelimiterToken", value: ")" },
    { variant: "DelimiterToken", value: ";" },
    { variant: "KeywordToken", value: "case" },
    { variant: "IdentToken", value: "Color" },
    { variant: "DelimiterToken", value: "." },
    { variant: "IdentToken", value: "RGB" },
    { variant: "DelimiterToken", value: "(" },
    { variant: "IdentToken", value: "r" },
    { variant: "DelimiterToken", value: "," },
    { variant: "IdentToken", value: "g" },
    { variant: "DelimiterToken", value: "," },
    { variant: "IdentToken", value: "b" },
    { variant: "DelimiterToken", value: ")" },
    { variant: "DelimiterToken", value: ":" },
    { variant: "KeywordToken", value: "print" },
    { variant: "DelimiterToken", value: "(" },
    { variant: "StringToken", value: "RGB(${r}, ${g}, ${b})" },
    { variant: "DelimiterToken", value: ")" },
    { variant: "DelimiterToken", value: ";" },
    { variant: "KeywordToken", value: "end" },
    { variant: "KeywordToken", value: "end" },
    { variant: "KeywordToken", value: "static" },
    { variant: "KeywordToken", value: "def" },
    { variant: "IdentToken", value: "getColor" },
    { variant: "DelimiterToken", value: "(" },
    { variant: "DelimiterToken", value: ")" },
    { variant: "DelimiterToken", value: ":" },
    { variant: "IdentToken", value: "Color" },
    { variant: "KeywordToken", value: "return" },
    { variant: "IdentToken", value: "Color" },
    { variant: "DelimiterToken", value: "." },
    { variant: "IdentToken", value: "Red" },
    { variant: "DelimiterToken", value: ";" },
    { variant: "KeywordToken", value: "end" },
    { variant: "KeywordToken", value: "end" },
  ]);
});
